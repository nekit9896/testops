services:
  db:
    image: bitnami/postgresql:17.0.0
    restart: always
    environment:
      - POSTGRESQL_DATABASE=testops
      - POSTGRESQL_USERNAME=testops
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - minio-network
    ports:
      - "5433:5432"

  flask-app:
    image: nekit9896/testops-flask-app:v1.1.40
    container_name: testops-flask-app
    restart: always
    ports:
      - "5000:5000"
    environment:
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_ENV=development
      # Переменные MinIO
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      # Переменные PostgreSQL
      - SQLALCHEMY_DATABASE_URI=postgresql://testops:@db:5432/testops
      - POSTGRESQL_HOST=db
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_DATABASE=testops
      - POSTGRESQL_USERNAME=testops
    depends_on:
      - minio
      - db
    networks:
      - minio-network

  minio:
    image: minio/minio:RELEASE.2025-02-28T09-55-16Z-cpuv1
    restart: always
    container_name: minio
    command: server /data --console-address ":9006"
    ports:
      - "9000:9000"  # Проброс порта для Web UI
      - "9006:9006"  # Проброс порта для консоли MinIO (если используется)
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "1.0"
    networks:
      - minio-network

networks:
  minio-network:
    driver: bridge

volumes:
  postgresql-data:  # Определяем том для PostgreSQL
  minio-data:     # Определяем том для MinIO
